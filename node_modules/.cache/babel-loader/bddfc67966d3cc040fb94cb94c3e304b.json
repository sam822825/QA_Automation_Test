{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samira\\\\Desktop\\\\MyProjects\\\\cypress-crash-course\\\\project-1\\\\src\\\\components\\\\Modal\\\\Modal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddModal({\n  habits,\n  setHabits\n}) {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [habit, setHabit] = useState(\"\");\n\n  const handleAdd = async () => {\n    if (habit) {\n      setHabits([...habits, {\n        _id: uuid(),\n        habit,\n        completed: false\n      }]);\n      setShow(false);\n      setHabit(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShow,\n      className: \"Habit-add-btn\",\n      id: \"habit-add-btn\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add a new habit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            placeholder: \"Habit\",\n            onChange: e => {\n              setHabit(e.target.value);\n            },\n            value: habit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleAdd,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddModal, \"5dOgHzSY1s/MJSD+MTM9wOEI6nI=\");\n\n_c = AddModal;\nexport default AddModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddModal\");","map":{"version":3,"sources":["C:/Users/samira/Desktop/MyProjects/cypress-crash-course/project-1/src/components/Modal/Modal.tsx"],"names":["useState","Modal","Button","InputGroup","FormControl","v4","uuid","AddModal","habits","setHabits","show","setShow","handleClose","handleShow","habit","setHabit","handleAdd","_id","completed","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,WAApC,QAAuD,iBAAvD;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;;;AAqBA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,EAAiD;AAAA;;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMY,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMgB,SAAS,GAAG,YAAY;AAC5B,QAAGF,KAAH,EAAS;AACPL,MAAAA,SAAS,CAAC,CACR,GAAGD,MADK,EAER;AACES,QAAAA,GAAG,EAAEX,IAAI,EADX;AAEEQ,QAAAA,KAFF;AAGEI,QAAAA,SAAS,EAAE;AAHb,OAFQ,CAAD,CAAT;AAQAP,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEF,UAAjB;AAA6B,MAAA,SAAS,EAAC,eAAvC;AAAuD,MAAA,EAAE,EAAC,eAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEH,IAAb;AAAmB,MAAA,MAAM,EAAEE,WAA3B;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,iCACE,QAAC,WAAD;AACE,YAAA,WAAW,EAAC,OADd;AAEE,YAAA,QAAQ,EAAGO,CAAD,IAAO;AAACJ,cAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAAyB,aAF7C;AAGE,YAAA,KAAK,EAAEP;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAaE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEF,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEI,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA4BD;;GAlDMT,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\"\r\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { v4 as uuid } from \"uuid\"\r\n\r\ninterface IProps {\r\n  habits: {\r\n    _id: string,\r\n    habit: string,\r\n    completed: boolean\r\n  }[],\r\n  setHabits: React.Dispatch<React.SetStateAction<{\r\n      _id: string,\r\n      habit: string;\r\n      completed: boolean;\r\n  }[]>>\r\n}\r\n\r\ntype Habit = {\r\n  _id: string,\r\n  habit: string,\r\n  completed: boolean\r\n}\r\n\r\nfunction AddModal({ habits, setHabits }: IProps) {\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [habit, setHabit] = useState(\"\")\r\n\r\n    const handleAdd = async () => {\r\n      if(habit){\r\n        setHabits([\r\n          ...habits,\r\n          {\r\n            _id: uuid(),\r\n            habit,\r\n            completed: false\r\n          }\r\n        ]);\r\n        setShow(false);\r\n        setHabit(\"\")\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <button onClick={handleShow} className=\"Habit-add-btn\" id=\"habit-add-btn\">Add</button>\r\n  \r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add a new habit</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                placeholder=\"Habit\"\r\n                onChange={(e) => {setHabit(e.target.value)}}\r\n                value={habit}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleAdd}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n  \r\nexport default AddModal"]},"metadata":{},"sourceType":"module"}