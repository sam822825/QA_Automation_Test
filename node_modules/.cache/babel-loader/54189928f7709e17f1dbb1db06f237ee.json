{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samira\\\\Desktop\\\\MyProjects\\\\cypress-crash-course\\\\project-1\\\\src\\\\components\\\\HabitCard\\\\HabitCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./HabitCard.css\";\nimport close from \"../../svg/close.svg\";\nimport check from \"../../svg/check.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HabitCard({\n  habit,\n  setHabits,\n  habits\n}) {\n  _s();\n\n  const [complete, setComplete] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HabitCard\",\n    onClick: () => {\n      let newHabits = habits.map(updatedHabit => {\n        if (updatedHabit._id === habit._id) {\n          return { ...habit,\n            completed: !habit.completed\n          };\n        } else return updatedHabit;\n      });\n      setHabits(newHabits);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HabitCard__completion-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"HabitCard__completion-icon\",\n        src: habit.completed ? check : close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HabitCard__habit-container\",\n      children: habit.habit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HabitCard, \"W4L6AnPttCLDhvNcYegEh2PBZDM=\");\n\n_c = HabitCard;\nexport default HabitCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"HabitCard\");","map":{"version":3,"sources":["C:/Users/samira/Desktop/MyProjects/cypress-crash-course/project-1/src/components/HabitCard/HabitCard.tsx"],"names":["React","useState","HabitCard","habit","setHabits","habits","complete","setComplete","newHabits","map","updatedHabit","_id","completed","check","close"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;;;;;AAsBA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAnB,EAAyD;AAAA;;AAErD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE,MAAM;AACtC,UAAIO,SAAS,GAAGH,MAAM,CAACI,GAAP,CAAWC,YAAY,IAAI;AACvC,YAAGA,YAAY,CAACC,GAAb,KAAqBR,KAAK,CAACQ,GAA9B,EAAkC;AAC9B,iBAAO,EACH,GAAGR,KADA;AAEHS,YAAAA,SAAS,EAAE,CAACT,KAAK,CAACS;AAFf,WAAP;AAIH,SALD,MAKO,OAAOF,YAAP;AACV,OAPe,CAAhB;AAQAN,MAAAA,SAAS,CAACI,SAAD,CAAT;AACH,KAVD;AAAA,4BAWI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAA4C,QAAA,GAAG,EAAEL,KAAK,CAACS,SAAN,GAAkBC,KAAlB,GAA0BC;AAA3E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAcI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,gBACKX,KAAK,CAACA;AADX;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAxBQD,S;;KAAAA,S;AA0BT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./HabitCard.css\"\r\nimport close from \"../../svg/close.svg\"\r\nimport check from \"../../svg/check.svg\"\r\n\r\ninterface IProps {\r\n    habit: {\r\n        _id: string,\r\n        habit: string,\r\n        completed: boolean\r\n    },\r\n    habits: {\r\n        _id: string,\r\n        habit: string,\r\n        completed: boolean\r\n    }[],\r\n    setHabits: React.Dispatch<React.SetStateAction<{\r\n        _id: string,\r\n        habit: string;\r\n        completed: boolean;\r\n    }[]>>\r\n}\r\n\r\nfunction HabitCard({ habit, setHabits, habits }: IProps) {\r\n\r\n    const [complete, setComplete] = useState(false)\r\n\r\n    return (\r\n        <div className=\"HabitCard\" onClick={() => {\r\n            let newHabits = habits.map(updatedHabit => {\r\n                if(updatedHabit._id === habit._id){\r\n                    return {\r\n                        ...habit,\r\n                        completed: !habit.completed\r\n                    }\r\n                } else return updatedHabit\r\n            });\r\n            setHabits(newHabits)\r\n        }}>\r\n            <div className=\"HabitCard__completion-container\">\r\n                <img className=\"HabitCard__completion-icon\" src={habit.completed ? check : close}/>\r\n            </div>\r\n            <div className=\"HabitCard__habit-container\">\r\n                {habit.habit}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HabitCard\r\n"]},"metadata":{},"sourceType":"module"}